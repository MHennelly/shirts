"""Designing Models Around Limited Items Too

Revision ID: 20c22d11c6a8
Revises: e7bb934b4f15
Create Date: 2022-10-01 18:41:08.328477

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "20c22d11c6a8"
down_revision = "e7bb934b4f15"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "hash", ["id"])
    op.add_column("item", sa.Column("limited", sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, "item", ["id"])
    op.drop_column("item", "inventory")
    op.drop_column("item", "size")
    op.create_unique_constraint(None, "order", ["id"])
    op.drop_column("order", "last")
    op.drop_column("order", "first")
    op.drop_column("order", "email")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "order",
        sa.Column("email", sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    )
    op.add_column(
        "order",
        sa.Column("first", sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    )
    op.add_column(
        "order",
        sa.Column("last", sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "order", type_="unique")
    op.add_column(
        "item",
        sa.Column(
            "size",
            postgresql.ENUM("XS", "S", "M", "L", "XL", name="size"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "item",
        sa.Column("inventory", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "item", type_="unique")
    op.drop_column("item", "limited")
    op.drop_constraint(None, "hash", type_="unique")
    # ### end Alembic commands ###
